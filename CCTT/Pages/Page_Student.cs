using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Entity;
using System.Drawing;
using System.Drawing.Configuration;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using CCTT.Pages;
using CCTT.AddPage;
using CCTT.BL;
using CCTT.Pages_LinkLable;
using DevExpress.CodeParser;
using DevExpress.Pdf.Native.BouncyCastle.Utilities.IO;

namespace CCTT.Pages
{
    public partial class Page_Student : DevExpress.XtraEditors.XtraUserControl
    {
        // جلب قاعدة البيانات وجدول الجنسية
        DB_CCTTEntities db = new DB_CCTTEntities();
        nationality tbNationality = new nationality();
        student tbstudent = new student();

        public Page_Student()
        {
            InitializeComponent();
            Load();

            // This line of code is generated by Data Source Configuration Wizard
            // Fill the ExcelDataSource asynchronously
            excelDataSource1.FillAsync();
        }

        public void Load()
        {
            CCTT.DB_CCTTEntities dbContext = new CCTT.DB_CCTTEntities();
            // Bind data to control when loading complete

            try
            {
                gridControl1.DataSource = getStudentV1TableAdapter.GetData();
                //  gridControl1.DataSource = get_main_cours_student_grade3TableAdapter.GetData(yearId, coursId);
                txt_student_nationality.DataSource = db.nationality.Select(x => x.nationilty).ToList();
                txt_student_specialty.DataSource = db.department.Select(x => x.name).ToList();
                txt_student_placeofbirth.DataSource = db.place_of_birth.Select(x => x.place).ToList();
                txt_student_address.DataSource = db.place_of_birth.Select(x => x.place).ToList();
                ClearData();
            }
            catch (Exception e)
            {
                MessageBox.Show(e.Message);

            }
            //لتحديد الحقل الاول اثناء فتح النافدة
            //ActiveControl = txt_student_id;
            //txt_student_name.Select();
            // txt_student_id.Focus();
            // if (txt_student_id.CanSelect)
            //  {
            // txt_student_id.Select();
            //  }
        }
        private void Add()
        {
            if (txt_student_name.Text == "")
            {
              MessageBox.Show("الحقل مطلوب", "", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
            else
            {

                AddData();
                Load();
               // ClearData();
            }
        }
        // دالة اضافة
        private void AddData()
        {
           
                tbstudent.name = txt_student_name.Text;
                tbstudent.parent_name = txt_student_name_father.Text;

                tbstudent.BOD = txt_student_brithday.Value;

                if (txt_student_nationality.Text != "")
                {
                    var iddep = db.nationality.Where(x => x.nationilty == txt_student_nationality.SelectedItem.ToString()).Select(x => x.id).FirstOrDefault();
                    tbstudent.nationality = iddep;
                }

                  tbstudent.email = txt_student_email.Text;
              
                if (txt_student_nid.Text != "")
                    tbstudent.national_num = Convert.ToInt64(txt_student_nid.Text);

                if (txt_student_phone.Text != "")
                    tbstudent.phone_num =  Convert.ToInt32(txt_student_phone.Text);

                if (txt_student_phonefather.Text != "")
                    tbstudent.parent_phone_num= Convert.ToInt32(txt_student_phonefather.Text);

                
                if (txt_student_Certificate_ratio.Text != "")
                   tbstudent.certifcate_grade = Convert.ToInt32(txt_student_Certificate_ratio.Text);

                tbstudent.certificate_place_of_origin = txt_student_goodtoget.Text;

                var iddep3 = db.department.Where(x => x.name == txt_student_specialty.SelectedItem.ToString()).Select(x => x.id).FirstOrDefault();
                tbstudent.nationality = iddep3;
              //  if (txt_student_year_of_enrollment.Text != "")
               //     tbstudent.year_of_joining = Convert.ToInt32(txt_student_year_of_enrollment.Text);
                if (txt_student_yeare.Text != "")
                    tbstudent.year_of_graduation = Convert.ToInt32(txt_student_yeare.Text);

                tbstudent.learning_system = txt_student_stadysystem.Text;

                if (txt_student_file_no.Text != "")
                    tbstudent.file_id = Convert.ToInt32(txt_student_file_no.Text);



                if (txt_student_sex.Text == "ذكر")
                    tbstudent.gender = 1;
                if (txt_student_sex.Text == "انثي")
                    tbstudent.gender = 2;
                
tbstudent.state_sem = 0;

                tbstudent.place_of_birth = txt_student_placeofbirth.Text;

                tbstudent.address = txt_student_address.Text;

                tbstudent.certificate_type = txt_student_certificatetype.Text;

                Methods m1 = new Methods();
                txt_student_image.Image.Save(m1.ma, System.Drawing.Imaging.ImageFormat.Jpeg);
                tbstudent.image = m1.convert_byte();
                tbstudent.idColge = db.students.Select(x => x.id).Max()+1;
                db.Entry(tbstudent).State = System.Data.Entity.EntityState.Added;


                db.SaveChanges();
                MessageBox.Show("تمت الاضافة بنجاح", "اضافة");
          
        }
         private void btn_edt_Click(object sender, EventArgs e)
         {
            int ID;
            try
            {
                   ID = Convert.ToInt32(gridView1.GetFocusedRowCellValue("id"));
                //ID = 43;
                if (ID > 0)
                {

                    tbstudent = db.students.Where(x => x.id == ID).FirstOrDefault();
                    tbstudent.id = ID;

                    tbstudent.name = txt_student_name.Text;
                    tbstudent.parent_name = txt_student_name_father.Text;

                    tbstudent.BOD = txt_student_brithday.Value;

                    if (txt_student_nationality.Text != "")
                    {
                        var iddep = db.nationality
                            .Where(x => x.nationilty == txt_student_nationality.SelectedItem.ToString()).Select(x => x.id)
                            .FirstOrDefault();
                        tbstudent.nationality = iddep;
                    }

                    tbstudent.email = txt_student_email.Text;

                    if (txt_student_nid.Text != "")
                        tbstudent.national_num = Convert.ToInt32(txt_student_nid.Text);

                    if (txt_student_phone.Text != "")
                        tbstudent.phone_num = Convert.ToInt32(txt_student_phone.Text);

                    if (txt_student_phonefather.Text != "")
                        tbstudent.parent_phone_num = Convert.ToInt32(txt_student_phonefather.Text);

                    //
                    if (txt_student_Certificate_ratio.Text != "")
                        tbstudent.certifcate_grade = Convert.ToInt64(txt_student_Certificate_ratio.Text);

                    tbstudent.certificate_place_of_origin = txt_student_goodtoget.Text;
                    var iddep3 = db.department.Where(x => x.name == txt_student_specialty.SelectedItem.ToString()).Select(x => x.id).FirstOrDefault();
                    tbstudent.nationality = iddep3;
                   
                    
                    //if (txt_student_year_of_enrollment.Text != "")
                    //    tbstudent.year_of_joining = Convert.ToInt32(txt_student_year_of_enrollment.Text);

                    if (txt_student_yeare.Text != "")
                        tbstudent.year_of_graduation = Convert.ToInt32(txt_student_yeare.Text);

                    tbstudent.learning_system = txt_student_stadysystem.Text;
                    if (txt_student_file_no.Text != "")
                        tbstudent.file_id = Convert.ToInt32(txt_student_file_no.Text);



                    //
                    if (txt_student_sex.Text == "ذكر")
                        tbstudent.gender = 1;
                    if (txt_student_sex.Text == "انثي")
                        tbstudent.gender = 2;
                   
                    Methods m1 = new Methods();
                    txt_student_image.Image.Save(m1.ma, System.Drawing.Imaging.ImageFormat.Jpeg);
                    tbstudent.image = m1.convert_byte();


                    db.Entry(tbstudent).State = EntityState.Modified;
                    db.SaveChanges();
                    MessageBox.Show("تم تعديل البيانات بالنجاح", "عملية تعديل", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    Load();
                }
                else
                {
                    MessageBox.Show("لا يوجد بيانات لتعديلها");
                }
            }
            catch (Exception exception)
            {
                MessageBox.Show(exception.Message);
            }
        }
        private void ClearData()
        {
            txt_student_name.Text = txt_student_nationality.Text = txt_student_placeofbirth.Text =
                txt_student_file_no.Text = txt_student_email.Text = txt_student_semester.Text =
                    txt_student_Certificate_ratio.Text = txt_student_address.Text =
                        txt_student_goodtoget.Text = txt_student_certificatetype.Text = txt_student_nid.Text =
                            txt_student_yeare.Text
                                = txt_student_specialty.Text =
                                    txt_student_phonefather.Text = txt_student_phone.Text = "";
        }

        //لنك الخاص بااضافة 
        private void link_nationality_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
        {
            Page_nationality page = new Page_nationality(this);
            page.ShowDialog();
        }

    
        private void link_Adress_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
        {
            Page_britdate page = new Page_britdate(this);
            page.ShowDialog();
        }

        private void btn_Add_Click(object sender, EventArgs e)
        {
            Add();
        }
        
       

      

       
        private void linkLabel2_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
        {
            Page_britdate page = new Page_britdate(this);
            page.ShowDialog();
        }
        //---------------------------------------------------------------------------------

        private void btn_delete_Click(object sender, EventArgs e)
        {
            int ID;
            var rs = MessageBox.Show("هل انت متأكد من هذا الاجراء , لايمكن استرجاع البيانات", "اجراء حدف", MessageBoxButtons.YesNo, MessageBoxIcon.Warning);
            if (rs == DialogResult.Yes)
            {

                try
                {
                    ID = Convert.ToInt32(gridView1.GetFocusedRowCellValue("id"));
                    if (ID > 0)
                    {
                        db = new DB_CCTTEntities();
                        tbstudent = db.students.Where(x => x.id == ID).FirstOrDefault();

                        db.Entry(tbstudent).State = EntityState.Deleted;
                        db.SaveChanges();

                        Load();
                    }
                    else
                    {
                        MessageBox.Show("لا يوجد بيانات لحدفها");
                    }
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex.Message);
                }
            }
            // MessageBox.Show(db.students.Select(x => x.id).Max().ToString());
            //  db.students.Select(x => x.id).Max();
        }

        private void linkLabel1_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
        {
            Page_britdate page = new Page_britdate(this);
            page.ShowDialog();
        }

        private void gridView1_RowClick(object sender, DevExpress.XtraGrid.Views.Grid.RowClickEventArgs e)
        {
            if (gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "رقم القيد") == null)
                txt_student_id.Text = "";
            else
            {
                txt_student_id.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "رقم القيد").ToString();
            }

            txt_student_name.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "الاسم").ToString();
            txt_student_brithday.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "تاريخ الميلاد").ToString();
            txt_student_sex.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "الجنس").ToString();
            txt_student_nationality.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "الجنسية").ToString();
            txt_student_placeofbirth.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "مكان الميلاد").ToString();
            if (gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "الرقم الوطني") == null)
                txt_student_nid.Text = "";
            else
            {
                txt_student_nid.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "الرقم الوطني").ToString();
            }
             if(gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "رقم الهاتف")==null)
             txt_student_phone.Text = "";
             else
             {
                 txt_student_phone.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "رقم الهاتف").ToString();
             }

             if (gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "رقم هاتف ولي الأمر") == null)
                 txt_student_phonefather.Text = "";
             else
             {
                 txt_student_phonefather.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "رقم هاتف ولي الأمر").ToString();
             }
              txt_student_email.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "البريد الالكتروني").ToString();
            //  txt_student_image.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "picture").ToString();
              txt_student_certificatetype.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "نوع الشهادة").ToString();//نوع شهاذه

              txt_student_Certificate_ratio.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "نسبة الشهادة").ToString();
             
            txt_student_name_father.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "اسم الوالد").ToString();
               txt_student_goodtoget.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "جهة الحصول").ToString();
           //   txt_student_year_of_enrollment.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "year_of_joining").ToString();
              txt_student_semester.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "الفصل الدراسي").ToString();

              if (gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "سنة الحصول علي شهادة") == null)
                  txt_student_yeare.Text = "";
              else
              {
                  txt_student_yeare.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "سنة الحصول علي شهادة").ToString();
              }

              txt_student_file_no.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "رقم الملف").ToString();
              txt_student_stadysystem.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "نظام الدراسي").ToString();
              txt_student_stadygroup.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "المجموعة الدراسية").ToString();
           //   txt_student_semester.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "semester").ToString();
           //  // .Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "state_sem").ToString();
           //  // .Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "state_id").ToString();
           //  // .Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "idColge").ToString();
           //   txt_student_image.Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "image").ToString();
             // .Text = gridView1.GetRowCellValue(gridView1.FocusedRowHandle, "student_search").ToString();
             
        }

        private void btn_update_Click(object sender, EventArgs e)
        {
            Load();
        }

        private void btn_print_Click(object sender, EventArgs e)
        {
            gridControl1.ShowPrintPreview();
        }

       

        //----------------------------------------------------------------------------------------تصميم
        private void txt_student_id_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                SendKeys.Send("{TAB}");
            }
            else
            {
                return;
            }
        }

        private void txt_student_name_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (!char.IsLetter(e.KeyChar) && !char.IsControl(e.KeyChar) && !char.IsWhiteSpace(e.KeyChar))
            {
                e.Handled = true;
            }
        }
        private void txt_student_certificatetype_Enter_1(object sender, EventArgs e)
        {

            txt_student_certificatetype.BackColor = Color.Yellow;
        }

        private void txt_student_certificatetype_Leave_1(object sender, EventArgs e)
        {

            txt_student_certificatetype.BackColor = Color.White;
        }
        private void txt_student_id_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (!char.IsNumber(e.KeyChar) && !char.IsControl(e.KeyChar))
            {
                e.Handled = true;
            }
        }

        private void txt_student_nid_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (!char.IsNumber(e.KeyChar) && !char.IsControl(e.KeyChar))
            {
                e.Handled = true;
            }
        }

        private void txt_student_phone_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (!char.IsNumber(e.KeyChar) && !char.IsControl(e.KeyChar))
            {
                e.Handled = true;
            }
        }

        private void txt_student_phonefather_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (!char.IsNumber(e.KeyChar) && !char.IsControl(e.KeyChar))
            {
                e.Handled = true;
            }
        }

        private void txt_student_name_father_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (!char.IsLetter(e.KeyChar) && !char.IsControl(e.KeyChar) && !char.IsWhiteSpace(e.KeyChar))
            {
                e.Handled = true;
            }
        }

        //تم حدفها سنه الالتحاق
        private void txt_student_certificatetype_KeyPress(object sender, KeyPressEventArgs e)
        {

        }

        private void txt_student_Certificate_ratio_KeyPress(object sender, KeyPressEventArgs e)
        {

            if (!char.IsNumber(e.KeyChar) && !char.IsControl(e.KeyChar) && !char.IsPunctuation(e.KeyChar))
            {
                e.Handled = true;
            }
        }

        private void txt_student_yeare_KeyPress(object sender, KeyPressEventArgs e)
        {

            if (!char.IsNumber(e.KeyChar) && !char.IsControl(e.KeyChar))
            {
                e.Handled = true;
            }
        }

        private void txt_student_id_Enter(object sender, EventArgs e)
        {
            txt_student_id.BackColor = Color.Yellow;

        }

        private void txt_student_id_Leave(object sender, EventArgs e)
        {
            txt_student_id.BackColor = Color.White;

        }

        private void txt_student_name_Enter(object sender, EventArgs e)
        {
            txt_student_name.BackColor = Color.Yellow;

        }

        private void txt_student_name_Leave(object sender, EventArgs e)
        {
            txt_student_name.BackColor = Color.White;

        }

        private void txt_student_sex_Enter(object sender, EventArgs e)
        {
            txt_student_sex.BackColor = Color.Yellow;

        }

        private void txt_student_sex_Leave(object sender, EventArgs e)
        {
            txt_student_sex.BackColor = Color.White;

        }

        private void txt_student_nationality_Enter(object sender, EventArgs e)
        {
            txt_student_nationality.BackColor = Color.Yellow;

        }

        private void txt_student_nationality_Leave(object sender, EventArgs e)
        {
            txt_student_nationality.BackColor = Color.White;

        }

        private void txt_student_placeofbirth_Enter(object sender, EventArgs e)
        {
            txt_student_placeofbirth.BackColor = Color.Yellow;

        }

        private void txt_student_placeofbirth_Leave(object sender, EventArgs e)
        {
            txt_student_placeofbirth.BackColor = Color.White;

        }

        private void txt_student_nid_Enter(object sender, EventArgs e)
        {
            txt_student_nid.BackColor = Color.Yellow;

        }

        private void txt_student_nid_Leave(object sender, EventArgs e)
        {
            txt_student_nid.BackColor = Color.White;

        }

        private void txt_student_phone_Enter(object sender, EventArgs e)
        {
            txt_student_phone.BackColor = Color.Yellow;

        }

        private void txt_student_phone_Leave(object sender, EventArgs e)
        {
            txt_student_phone.BackColor = Color.White;

        }

        private void txt_student_phonefather_Enter(object sender, EventArgs e)
        {
            txt_student_phonefather.BackColor = Color.Yellow;

        }

        private void txt_student_phonefather_Leave(object sender, EventArgs e)
        {
            txt_student_phonefather.BackColor = Color.White;

        }

        private void txt_student_name_father_Enter(object sender, EventArgs e)
        {
            txt_student_name_father.BackColor = Color.Yellow;

        }

        private void txt_student_name_father_Leave(object sender, EventArgs e)
        {
            txt_student_name_father.BackColor = Color.White;

        }

        private void txt_student_address_Enter(object sender, EventArgs e)
        {
            txt_student_address.BackColor = Color.Yellow;

        }

        private void txt_student_address_Leave(object sender, EventArgs e)
        {
            txt_student_address.BackColor = Color.White;

        }

        private void txt_student_certificatetype_Enter(object sender, EventArgs e)
        {
            txt_student_certificatetype.BackColor = Color.Yellow;

        }

        private void txt_student_certificatetype_Leave(object sender, EventArgs e)
        {
            txt_student_certificatetype.BackColor = Color.White;

        }

        private void txt_student_Certificate_ratio_Enter(object sender, EventArgs e)
        {
            txt_student_Certificate_ratio.BackColor = Color.Yellow;

        }

        private void txt_student_Certificate_ratio_Leave(object sender, EventArgs e)
        {
            txt_student_Certificate_ratio.BackColor = Color.White;

        }

        private void txt_student_goodtoget_Enter(object sender, EventArgs e)
        {
            txt_student_goodtoget.BackColor = Color.Yellow;

        }

        private void txt_student_goodtoget_Leave(object sender, EventArgs e)
        {
            txt_student_goodtoget.BackColor = Color.White;

        }

        private void txt_student_specialty_Enter(object sender, EventArgs e)
        {
            txt_student_specialty.BackColor = Color.Yellow;

        }

        private void txt_student_specialty_Leave(object sender, EventArgs e)
        {
            txt_student_specialty.BackColor = Color.White;

        }

        private void txt_student_year_of_enrollment_Enter(object sender, EventArgs e)
        {
           // txt_student_year_of_enrollment.BackColor = Color.Yellow;

        }

        private void txt_student_year_of_enrollment_Leave(object sender, EventArgs e)
        {
         //   txt_student_year_of_enrollment.BackColor = Color.White;

        }

        private void txt_student_semester_Enter(object sender, EventArgs e)
        {
            txt_student_semester.BackColor = Color.Yellow;

        }

        private void txt_student_semester_Leave(object sender, EventArgs e)
        {
            txt_student_semester.BackColor = Color.White;

        }

        private void txt_student_yeare_Enter(object sender, EventArgs e)
        {
            txt_student_yeare.BackColor = Color.Yellow;

        }

        private void txt_student_yeare_Leave(object sender, EventArgs e)
        {
            txt_student_yeare.BackColor = Color.White;

        }

        private void txt_student_stadysystem_Enter(object sender, EventArgs e)
        {
            txt_student_stadysystem.BackColor = Color.Yellow;

        }

        private void txt_student_stadysystem_Leave(object sender, EventArgs e)
        {
            txt_student_stadysystem.BackColor = Color.White;

        }

        private void txt_student_file_no_Enter(object sender, EventArgs e)
        {
            txt_student_file_no.BackColor = Color.Yellow;

        }

        private void txt_student_file_no_Leave(object sender, EventArgs e)
        {
            txt_student_file_no.BackColor = Color.White;

        }

        private void txt_student_email_Enter(object sender, EventArgs e)
        {
            txt_student_email.BackColor = Color.Yellow;

        }

        private void txt_student_email_Leave(object sender, EventArgs e)
        {
            txt_student_email.BackColor = Color.White;

        }

        private void txt_student_stadygroup_Enter(object sender, EventArgs e)
        {
            txt_student_stadygroup.BackColor = Color.Yellow;

        }

        private void txt_student_stadygroup_Leave(object sender, EventArgs e)
        {
            txt_student_stadygroup.BackColor = Color.White;

        }

        private void gridControl1_Click(object sender, EventArgs e)
        {

        }
    }
}
